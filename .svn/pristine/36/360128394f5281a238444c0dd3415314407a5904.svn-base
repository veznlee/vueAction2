<template>
    <div class="table">
        <el-row>
            <el-col :span="24">
                <div class="grid-content bg-purple-dark">
                    <div class="layout-wrap layout-blue">
                        <div class="layout-title">
                            <h4>出库单量走势</h4>
                            <div class="layout-title-r">
                                <el-select v-model="countParam.flag" clearable placeholder="出库类型" class="handle-Mselect mr10" @change="initCountChart">
                                    <el-option label="销售出库" value="3"></el-option>
                                    <el-option label="生产出库" value="4"></el-option>
                                </el-select>
                                <el-date-picker v-model="countParam.date" type="month" placeholder="选择月" value-format="yyyy-MM" class="handle-date" @change="initCountChart"></el-date-picker>
                            </div>
                        </div>
                        <div class="layout-content content-blue">
                            <div class="grid-content bg-purple">
                                <div id="countAnalyze" style="width: 100%; height: 300px"></div>
                            </div>
                        </div>
                    </div>
                </div>
            </el-col>
            <el-col :span="24">
                <div class="grid-content bg-purple-dark">
                    <div class="layout-wrap layout-green">
                        <div class="layout-title">
                            <h4>出库商品走势</h4>
                            <div class="layout-title-r">
                                <el-select v-model="proParam.flag" clearable placeholder="出库类型" class="handle-Mselect mr10" @change="initProChart">
                                    <el-option label="销售出库" value="3"></el-option>
                                    <el-option label="生产出库" value="4"></el-option>
                                </el-select>
                                <el-select v-model="proParam.type" clearable placeholder="月度走势" class="handle-Mselect mr10" @change="initProChart">
                                    <el-option label="月度走势" value="0"></el-option>
                                    <el-option label="年度走势" value="1"></el-option>
                                </el-select>
                                <el-button type="success" plain class="mr10" @click="changePro()">切换商品</el-button>
                                <el-date-picker v-model="yearDate" type="year" placeholder="选择年" value-format="yyyy" class="handle-date mr10" v-show="showYear" @change="initProChart"></el-date-picker>
                                <el-date-picker v-model="monthDate" type="month" placeholder="选择月" value-format="yyyy-MM" class="handle-date" v-show="showMonth" @change="initProChart"></el-date-picker>
                            </div>
                        </div>
                        <div class="layout-content content-blue">
                            <div id="productAnalyze" style="width: 100%; height: 300px"></div>
                        </div>
                    </div>
                </div>
            </el-col>
            <el-col :span="24">
                <div class="grid-content bg-purple-dark">
                    <div class="layout-wrap layout-green">
                        <div class="layout-title">
                            <h4>客户购买分析</h4>
                            <div class="layout-title-r">
                                <el-button type="success" plain class="mr10" @click="changeCustomer()">切换客户</el-button>
                                <el-date-picker v-model="customerParam.date" type="date" placeholder="选择月" value-format="yyyy-MM-dd" class="handle-date" @change="initCustomerChart"></el-date-picker>
                            </div>
                        </div>
                        <div class="layout-content content-blue">
                            <div id="customerAnalyze" style="width: 100%; height: 300px"></div>
                        </div>
                    </div>
                </div>
            </el-col>
        </el-row>

        <!-- 商品弹出框 -->
        <el-dialog :title="formTitle" :visible.sync="editVisible" width="50%" custom-class="mod-el-dialog">
            <el-table :data="tableData" stripe border style="width: 100%" @selection-change="handleSelectionChange" v-loading="listLoading" element-loading-text="给我一点时间">
                <el-table-column width="55" align="center" fixed label="选择">
                    <template slot-scope="scope">
                        <el-radio class="radio" v-model="radio" :label="scope.$index" @change="radioChange(scope.$index, scope.row)">&nbsp;</el-radio>
                    </template>
                </el-table-column>
                <el-table-column type="index" :index="indexMethod" fixed align="center" width="50" label="序号"></el-table-column>
                <el-table-column prop="ccode" label="商品编码" align="center" width="120">
                </el-table-column>
                <el-table-column prop="cname" label="商品名称" min-width="200">
                </el-table-column>
                <el-table-column prop="refSysParam" label="商品类别" width="120" align="center">
                </el-table-column>
                <el-table-column label="商品规格" width="120" align="center">
                    <template slot-scope="scope">
                        <span>{{ scope.row.pdSpecification }}</span>
                        <span>{{ scope.row.pdSpecificationSUnit }}</span>
                    </template>
                </el-table-column>
                <el-table-column label="包装规格" width="120" align="center">
                    <template slot-scope="scope">
                        <span>{{ scope.row.packSpecification }}</span>
                        <span>{{ scope.row.packSpecificationBUnit }}</span>
                    </template>
                </el-table-column>
            </el-table>
            <span slot="footer" class="dialog-footer">
                <el-button type="button" @click="editVisible = false">关闭</el-button>
                <el-button type="primary" @click="getProGuid">保存</el-button>
            </span>
        </el-dialog>

        <!-- 客户弹出框 -->
        <el-dialog title="选择客户" :visible.sync="editCusVisible" width="50%" custom-class="mod-el-dialog">
            <el-table :data="cusData" stripe border style="width: 100%" @selection-change="handleSelectionChange" v-loading="listLoading" element-loading-text="给我一点时间">
                <el-table-column width="55" align="center" fixed label="选择">
                    <template slot-scope="scope">
                        <el-radio class="radio" v-model="radio" :label="scope.$index" @change="cusChange(scope.$index, scope.row)">&nbsp;</el-radio>
                    </template>
                </el-table-column>
                <el-table-column type="index" :index="indexMethod" fixed align="center" width="50" label="序号"></el-table-column>
                <el-table-column prop="cpName" label="企业名称" min-width="200"></el-table-column>
                <el-table-column prop="name" label="联系人" width="150" align="center"></el-table-column>
                <el-table-column prop="phone" label="联系电话" width="200" align="center"></el-table-column>
            </el-table>
            <span slot="footer" class="dialog-footer">
                <el-button type="button" @click="editCusVisible = false">关闭</el-button>
                <el-button type="primary" @click="getCusGuid">保存</el-button>
            </span>
        </el-dialog>
    </div>
</template>

<script>
    var echarts = require('echarts');
    import request from '../../../utils/request'
    import baseMixin from '../../common/tableBase';
    export default {
        mixins: [baseMixin],
        data() {
            return {
                Urls:{
                    tableList:'/zhccproduct/list',
                    customerList:'/zhcccustomer/list',
                    countList:'/dataAnalyze/getOrderCount',
                    proList:'/dataAnalyze/getProductSum',
                    cusList:'/dataAnalyze/getCustomerData',
                },
                listParam: {
                    page: 1,
                    pageSize: 10,
                    condition:'',
                    refSysParam:'',
                    cstatus:''
                },
                cusParam: {
                    page: 1,
                    pageSize: 10,
                    ctype:'',
                    province:'',
                    district:'',
                    name:'',
                    cpName:'',
                },
                editCusVisible:false,
                cusData:[],
                countParam:{
                    date:'2018-06',
                    flag:'3'
                },
                xCount:[],
                yCount:[],
                xPro:[],
                yPro:[],
                xCustomer:[],
                yCustomer:[],
                yearDate:'2018',
                monthDate:'2018-06',
                proName:'',
                proLegend:[],
                cusName:'',
                cusLegend:[],
                proParam:{
                    date:'2018',
                    flag:'3',
                    type:'1',
                    pdGuid:''
                },
                customerParam:{
                    date:'2018-06-20',
                    customerGuid:'',
                },
                radio:'',
                showYear:true,
                showMonth:false
            }
        },
        created() {
            this.getCusData()
        },
        mounted() {
            this.$nextTick(function() {
                this.initCountChart();
            })
        },
        watch:{},
        computed: {},
        methods: {
            initCountChart(){
                var myChart = echarts.init(document.getElementById('countAnalyze'));
                request({
                    url:this.Urls.countList,
                    method: 'get',
                    params: this.countParam
                }).then(response => {
                    if(response.data.code==0){
                        let conStr=[];
                        for(let i=1; i<response.data.data.length+1; i++){
                            conStr.push(i)
                        }
                        this.xCount=conStr;
                        this.yCount=response.data.data;
                        myChart.setOption({
                            color:['#A6CF4C', '#fb8b2f'],
                            tooltip: {},
                            legend: {
                                data:['出库单量'],
                            },
                            grid: {
                                top:'12%',
                                left: '1%',
                                right: '1%',
                                bottom: '1%',
                                containLabel: true
                            },
                            xAxis: {
                                type: 'category',
                                axisLine: {show: false},
                                axisTick:{show:false},
                                data: this.xCount,
                            },
                            yAxis: {
                                name: '库数量（单）',
                                type: 'value',
                                axisLine: {show: false},
                                axisTick:{show:false},
                            },
                            series: [{
                                name:'出库单量',
                                data: this.yCount,
                                type: 'line',
                                smooth: true
                            }]
                        });
                    }
                })
            },
            initProChart(){
                if(this.proParam.type==0){
                    this.showMonth=true
                    this.showYear=false
                    this.proParam.date=this.monthDate
                }else if(this.proParam.type==1){
                    this.showYear=true
                    this.showMonth=false
                    this.proParam.date=this.yearDate
                }
                var proChart = echarts.init(document.getElementById('productAnalyze'));
                request({
                    url:this.Urls.proList,
                    method: 'get',
                    params: this.proParam
                }).then(response => {
                    if(response.data.code==0){
                        let proStr=[];
                        for(let i=1; i<response.data.data.length+1; i++){
                            proStr.push(i)
                        }
                        this.xPro=proStr;
                        this.yPro=response.data.data;
                        proChart.setOption({
                            color:['#A6CF4C', '#fb8b2f'],
                            tooltip: {},
                            legend: {
                                data:this.proLegend,
                            },
                            grid: {
                                top:'12%',
                                left: '1%',
                                right: '1%',
                                bottom: '1%',
                                containLabel: true
                            },
                            xAxis: {
                                type: 'category',
                                axisLine: {show: false},
                                axisTick:{show:false},
                                data: this.xPro
                            },
                            yAxis: {
                                name: '出库数量（瓶）',
                                type: 'value',
                                axisLine: {show: false},
                                axisTick:{show:false},
                            },
                            series: [{
                                name:this.proName,
                                data: this.yPro,
                                type: 'line',
                                smooth: true
                            }]
                        });
                    }
                })
            },
            initCustomerChart(){
                var customerChart = echarts.init(document.getElementById('customerAnalyze'));
                request({
                    url:this.Urls.cusList,
                    method: 'get',
                    params: this.customerParam
                }).then(response => {
                    if(response.data.code==0){
                        let cusStr=[];
                        for(let i=1; i<response.data.data.length+1; i++){
                            cusStr.push(i)
                        }
                        this.xPro=cusStr;
                        this.yPro=response.data.data;
                        customerChart.setOption({
                            color:['#3398DB'],
                            tooltip : {
                                trigger: 'axis',
                                axisPointer : {
                                    type : 'shadow'
                                }
                            },
                            legend: {
                                data:['直接访问'],
                            },
                            grid: {
                                top:'12%',
                                left: '1%',
                                right: '1%',
                                bottom: '1%',
                                containLabel: true
                            },
                            xAxis : [
                                {
                                    type : 'category',
                                    data : ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'],
                                    axisTick: {
                                        alignWithLabel: true
                                    },
                                    axisLine: {show: false},
                                }
                            ],
                            yAxis : [
                                {
                                    type : 'value',
                                    axisLine: {show: false},
                                    axisTick:{show:false},
                                }
                            ],
                            series : [
                                {
                                    name:'直接访问',
                                    type:'bar',
                                    barWidth: '60%',
                                    data:[10, 52, 200, 334, 390, 330, 220]
                                }
                            ]
                        });
                    }
                })
            },
            getTableData() {
                this.listLoading = true;
                request({
                    url:this.Urls.tableList,
                    method: 'get',
                    params: this.listParam
                }).then(response => {
                    if(response.data.code==0){
                        this.tableData = response.data.data;
                        this.total = response.data.total;
                        this.listLoading = false;
                        this.proParam.pdGuid=response.data.data[0].guid;
                        this.proLegend.push(response.data.data[0].cname);
                        this.proName=response.data.data[0].cname;
                        this.initProChart();
                    }
                })
            },
            changePro(){
                this.formTitle='选择商品';
                this.editVisible = true;
            },
            changeCustomer(){
                this.editCusVisible = true;
            },
            getCusData() {
                this.listLoading = true;
                request({
                    url:this.Urls.customerList,
                    method: 'get',
                    params: this.cusParam
                }).then(response => {
                    if(response.data.code==0){
                        this.cusData = response.data.data;
                        this.total = response.data.total;
                        this.listLoading = false;
                        this.customerParam.customerGuid=response.data.data[0].guid;
                        this.cusLegend.push(response.data.data[0].cpName);
                        this.cusName=response.data.data[0].cpName;
                        this.initCustomerChart();
                    }
                })
            },
            handleSelectionChange(val) {
            },
            radioChange(index,row){
                this.proParam.pdGuid=row.guid;
                this.proLegend.push(row.cname);
                this.proName=row.cname;
            },
            cusChange(index,row){
                this.cusParam.customerGuid=row.guid;
                this.cusLegend.push(row.cpName);
                this.cusName=row.cpName;
            },
            getProGuid(){
                this.initProChart();
                this.editVisible = false;
            },
            getCusGuid(){
                this.initCustomerChart();
                this.editCusVisible = false;
            },
        }
    }
</script>

<style scoped>
    .handle-date{
        width: 140px;
    }
    .handle-Mselect{
        width: 200px;
    }
</style>
