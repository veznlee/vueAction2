<template>
    <div class="table">
        <div class="container">
            <div class="handle-box">
                <div class="search-left">
                    <el-button type="primary" icon="add" @click="handleAdd()">新增</el-button>
                </div>
                <div align="right" class="search-right">
                    <el-select v-model="listParam.refSysParam" placeholder="商品类别" class="handle-select" @change="search">
                        <el-option label="选择商品类别" value=""></el-option>
                        <el-option v-for="item in typeList" :key="item.guid" :label="item.cname" :value="item.guid"></el-option>
                    </el-select>
                    <el-select v-model="listParam.cstatus" placeholder="选择状态" class="handle-select" @change="search">
                        <el-option label="选择状态" value=""></el-option>
                        <el-option label="启用" value="2"></el-option>
                        <el-option label="禁用" value="1"></el-option>
                    </el-select>
                    <el-input v-model="listParam.condition" placeholder="商品编码/商品名称" @keyup.enter.native="search" class="handle-input mr10"></el-input>
                    <el-button type="primary" icon="search" @click="search">搜索</el-button>
                </div>
            </div>
            <el-table :data="tableData" stripe border style="width: 100%" v-loading="listLoading" element-loading-text="给我一点时间" highlight-current-row>
                <el-table-column type="index" :index="indexMethod" fixed align="center" width="50" label="序号"></el-table-column>
                <el-table-column prop="ccode" label="商品编码" align="center" width="120">
                </el-table-column>
                <el-table-column prop="cname" label="商品名称" width="150">
                </el-table-column>
                <el-table-column prop="refSysParam" label="商品类别" width="120" align="center">
                </el-table-column>
                <el-table-column label="商品数量" width="100" align="center">
                    <template slot-scope="scope">
                        <span>{{ Number(scope.row.pdSpecification) * Number(scope.row.packSpecification) }}</span>
                        <span>{{ scope.row.pdSpecificationBUnit }}</span>
                    </template>
                </el-table-column>
                <el-table-column label="商品规格" width="120" align="center">
                    <template slot-scope="scope">
                        <span>{{ scope.row.pdSpecification }}</span>
                        <span>{{ scope.row.pdSpecificationSUnit }}</span>
                    </template>
                </el-table-column>
                <el-table-column label="包装规格" width="120" align="center">
                    <template slot-scope="scope">
                        <span>{{ scope.row.packSpecification }}</span>
                        <span>{{ scope.row.packSpecificationBUnit }}</span>
                    </template>
                </el-table-column>
                <el-table-column prop="palletCapacity" label="每托盘容量" width="150" align="center">
                </el-table-column>
                <el-table-column label="保质期" width="100" align="center">
                    <template slot-scope="scope">
                        <span>{{ scope.row.effectiveDate }}</span>
                        <span>{{ getDateUnit(scope.row.effectiveDateUnit) }}</span>
                    </template>
                </el-table-column>
                <el-table-column label="预警期" width="100" align="center">
                    <template slot-scope="scope">
                        <span>{{ scope.row.warningDate }}</span>
                        <span>{{ getDateUnit(scope.row.warningDateUnit) }}</span>
                    </template>
                </el-table-column>
                <el-table-column prop="warningNum" label="库存预警值" width="100" align="center">
                </el-table-column>
                <el-table-column prop="cdesc" label="商品描述" min-width="280">
                </el-table-column>
                <el-table-column align="center" label="状态" width="80" fixed="right">
                    <template slot-scope="scope">
                        <el-switch v-model="scope.row.cstatus" @change="statusChange(scope.$index, scope.row)" active-color="#90c31f" inactive-color="#dcdfe6" active-value="2" inactive-value="1"></el-switch>
                    </template>
                </el-table-column>
                <el-table-column label="操作" align="center" width="140" fixed="right">
                    <template slot-scope="scope">
                        <el-button size="small" type="success" plain @click="handleUpdate(scope.$index, scope.row)">编辑</el-button>
                        <el-button size="small" type="danger" @click="handleDelete(scope.$index, scope.row)">删除</el-button>
                    </template>
                </el-table-column>
            </el-table>
            <div class="pagination-container">
                <el-pagination background @size-change="handleSizeChange" @current-change="handleCurrentChange" :current-page="listParam.page" :page-sizes="[10,20,30, 40]" :page-size="listParam.pageSize" layout="total, sizes, prev, pager, next, jumper" :total="total">
                </el-pagination>
            </div>
        </div>

        <!-- 编辑弹出框 -->
        <el-dialog :title="formTitle" :visible.sync="editVisible" width="50%" custom-class="mod-el-dialog" :close-on-click-modal="false">
            <el-form :rules="rules" ref="form" :model="form" status-icon label-width="100px">
                <el-form-item label="商品图片">
                    <div class="crop-demo">
                        <img :src="imgUrl" class="pre-img">
                        <div class="crop-demo-btn">选择图片
                            <input class="crop-input" type="file" name="image" accept="image/jpeg,image/jpg,image/png" @change="setImage"/>
                        </div>
                    </div>
                </el-form-item>
                <el-form-item label="商品编码">
                    <el-input v-model="form.ccode" placeholder="编码自动生成" disabled></el-input>
                </el-form-item>
                <el-row :gutter="10">
                    <el-col :span="12">
                        <div class="grid-content bg-purple">
                            <el-form-item label="商品类别" prop="refSysParam">
                                <el-select v-model="form.refSysParam" placeholder="请选择商品类别" style="width: 100%">
                                    <el-option v-for="item in typeList" :key="item.guid" :label="item.cname" :value="item.guid"></el-option>
                                </el-select>
                            </el-form-item>
                        </div>
                    </el-col>
                    <el-col :span="12">
                        <div class="grid-content bg-purple">
                            <el-form-item label="商品名称" prop="cname">
                                <el-input v-model="form.cname"></el-input>
                            </el-form-item>
                        </div>
                    </el-col>
                </el-row>
                <el-row :gutter="10">
                    <el-col :md="12" style="padding: 0">
                        <div class="grid-content bg-purple">
                            <el-form-item label="保质期" style="margin-bottom: 0" required>
                                <el-col :md="14" :xl="18">
                                    <el-form-item prop="effectiveDate">
                                        <el-input type="number" placeholder="50" v-model="form.effectiveDate"></el-input>
                                    </el-form-item>
                                </el-col>
                                <el-col :md="10" :xl="6">
                                    <el-form-item prop="edUnit">
                                        <el-select v-model="form.edUnit" prop="edUnit" placeholder="天">
                                            <el-option label="天" value="day"></el-option>
                                            <el-option label="月" value="month"></el-option>
                                            <el-option label="年" value="year"></el-option>
                                        </el-select>
                                    </el-form-item>
                                </el-col>
                            </el-form-item>
                        </div>
                    </el-col>
                    <el-col :md="12" style="padding: 0">
                        <div class="grid-content bg-purple">
                            <el-form-item label="预警期" style="margin-bottom: 0" required>
                                <el-col :md="14" :xl="18">
                                    <el-form-item prop="warningDate">
                                        <el-input type="number" placeholder="15" v-model="form.warningDate"></el-input>
                                    </el-form-item>
                                </el-col>
                                <el-col :md="10" :xl="6">
                                    <el-form-item prop="edUnit">
                                        <el-select v-model="form.wdUnit" prop="edUnit" placeholder="月">
                                            <el-option label="天" value="day"></el-option>
                                            <el-option label="月" value="month"></el-option>
                                            <el-option label="年" value="year"></el-option>
                                        </el-select>
                                    </el-form-item>
                                </el-col>
                            </el-form-item>
                        </div>
                    </el-col>
                </el-row>
                <el-row :gutter="10">
                    <el-col :md="24" :xl="12" style="padding: 0">
                        <div class="grid-content bg-purple">
                            <el-form-item label="商品规格" style="margin-bottom: 0" required>
                                <el-col :span="12">
                                    <el-form-item prop="pdSpecification">
                                        <el-input type="number" placeholder="500" v-model="form.pdSpecification"></el-input>
                                    </el-form-item>
                                </el-col>
                                <el-col :span="6">
                                    <el-form-item prop="pdsSRefSysParam">
                                        <el-select v-model="form.pdsSRefSysParam" placeholder="ml">
                                            <el-option v-for="item in unitList" :key="item.guid" :label="item.cname" :value="item.guid"></el-option>
                                        </el-select>
                                    </el-form-item>
                                </el-col>
                                <el-col :span="6">
                                    <el-form-item prop="pdsBRefSysParam">
                                        <el-select v-model="form.pdsBRefSysParam" placeholder="瓶">
                                            <el-option v-for="item in unitList" :key="item.guid" :label="item.cname" :value="item.guid"></el-option>
                                        </el-select>
                                    </el-form-item>
                                </el-col>
                            </el-form-item>
                        </div>
                    </el-col>
                    <el-col :md="24" :xl="12" style="padding: 0">
                        <div class="grid-content bg-purple">
                            <el-form-item label="包装规格" style="margin-bottom: 0" required>
                                <el-col :span="12">
                                    <el-form-item prop="packSpecification">
                                        <el-input type="number" placeholder="24" v-model="form.packSpecification"></el-input>
                                    </el-form-item>
                                </el-col>
                                <el-col :span="6">
                                    <el-form-item>
                                        <el-select v-model="form.pdsBRefSysParam" placeholder="瓶" disabled>
                                            <el-option v-for="item in unitList" :key="item.guid" :label="item.cname" :value="item.guid"></el-option>
                                        </el-select>
                                    </el-form-item>
                                </el-col>
                                <el-col :span="6">
                                    <el-form-item prop="packsBRefSysParam">
                                        <el-select v-model="form.packsBRefSysParam" placeholder="箱">
                                            <el-option v-for="item in unitList" :key="item.guid" :label="item.cname" :value="item.guid"></el-option>
                                        </el-select>
                                    </el-form-item>
                                </el-col>
                            </el-form-item>
                        </div>
                    </el-col>
                </el-row>
                <el-row :gutter="10">
                    <el-col :span="12">
                        <div class="grid-content bg-purple">
                            <el-form-item label="每托盘容量" prop="palletCapacity">
                                <el-input placeholder="500" v-model="form.palletCapacity"></el-input>
                            </el-form-item>
                        </div>
                    </el-col>
                    <el-col :span="12">
                        <div class="grid-content bg-purple">
                            <el-form-item label="库存预警值" prop="warningNum">
                                <el-input placeholder="240" v-model="form.warningNum"></el-input>
                            </el-form-item>
                        </div>
                    </el-col>
                </el-row>
                <el-form-item label="商品描述">
                    <el-input type="textarea" v-model="form.cdesc"></el-input>
                </el-form-item>
            </el-form>
            <span slot="footer" class="dialog-footer">
                <el-button type="button" @click="editVisible = false">关 闭</el-button>
                <el-button v-if="dialogStatus=='create'" type="primary" @click="addData" :disabled="isSubmit">保 存</el-button>
                <el-button v-else type="primary" @click="updateData" :disabled="isSubmit">保 存</el-button>
            </span>
        </el-dialog>

        <!-- 删除提示框 -->
        <el-dialog title="提示" :visible.sync="delVisible" width="300px" center>
            <div class="del-dialog-cnt">删除不可恢复，是否确定删除？</div>
            <span slot="footer" class="dialog-footer">
                <el-button @click="delVisible = false">关 闭</el-button>
                <el-button type="primary" @click="deleteRow">保 存</el-button>
            </span>
        </el-dialog>
    </div>
</template>

<script>
    import request from '../../../utils/request'
    import { tableList, tableAdd, tableUpdate, tableDelete, statusList, typeList, unitList, tableDetail,isNameRepeat} from '../../../api/commodity'
    import ElOption from "element-ui/packages/select/src/option";
    export default {
        components: {ElOption},
        data() {
            return {
                tableData: [],
                total: 0,
                listParam: {
                    page: 1,
                    pageSize: 10,
                    condition:'',
                    refSysParam:'',
                    cstatus:''
                },
                listLoading: false,
                dialogStatus: '',
                formTitle:'',
                editVisible: false,
                delVisible: false,
                authVisible: false,
                form: {
                    guid:'',
                    refSysParam:'',
                    cname:'',
                    effectiveDate: '',
                    edUnit: '',
                    warningDate:'',
                    wdUnit:'',
                    pdSpecification:'',
                    pdsSRefSysParam:'',
                    pdsBRefSysParam: '',
                    packSpecification:'',
                    packsBRefSysParam:'',
                    palletCapacity:'',
                    warningNum:'',
                    cdesc:'',
                    imgUrl:''
                },
                typeList:[],
                unitParam:{
                    ctype:'0'
                },
                existParam:{
                    cname:''
                },
                unitList:[],
                userFormList:[],
                idx: -1,
                rules: {
                    refSysParam: [{ required: true, message: '必填', trigger: 'blur' }],
                    cname: [
                        { required: true, message: '此字段为必填', trigger: 'blur' },
                        { validator: this.isExist, trigger: 'blur'},
                        { max: 32, message: '最多只能输入32位字符', trigger: 'blur' }
                    ],
                    effectiveDate: [{ required: true, message: '必填', trigger: 'blur' }],
                    edUnit: [{ required: true, message: '必填', trigger: 'change' }],
                    warningDate: [{ required: true, message: '必填', trigger: 'blur' }],
                    wdUnit: [{ required: true, message: '必填', trigger: 'change' }],
                    pdSpecification: [{ required: true, message: '必填', trigger: 'blur' }],
                    pdsSRefSysParam: [{ required: true, message: '必填', trigger: 'change' }],
                    pdsBRefSysParam: [{ required: true, message: '必填', trigger: 'change' }],
                    packSpecification: [{ required: true, message: '必填', trigger: 'blur' }],
                    packsBRefSysParam: [{ required: true, message: '必填', trigger: 'change' }],
                    palletCapacity: [{ required: true, message: '必填', trigger: 'blur' }]
                },
                imgUrl: '',
                isSubmit:false,
                historyName:''
            }
        },
        created() {
            this.getTableData();
            this.getTypeList();
            this.getUnitList();
        },
        computed: {
        },
        methods: {
            // 分页导航
            handleCurrentChange(val) {
                this.listParam.page = val;
                this.getTableData();
            },
            handleSizeChange(val) {
                this.listParam.pageSize = val;
                this.getTableData()
            },
            getTableData() {
                this.listLoading = true;
                tableList(this.listParam).then(response => {
                    if(response.data.code==0){
                        this.tableData = response.data.data;
                        this.total = response.data.total;
                        this.listLoading = false
                    }
                })
            },
            indexMethod(index){
                return index + (this.listParam.page - 1) * this.listParam.pageSize + 1;
            },
            //搜索
            search() {
                this.getTableData();
            },
            //表单添加
            handleAdd(){
                this.formTitle='添加';
                this.isSubmit=false;
                this.form={
                    guid:'',
                    refSysParam:'',
                    cname:'',
                    effectiveDate: '',
                    edUnit: '',
                    warningDate:'',
                    wdUnit:'',
                    pdSpecification:'',
                    pdsSRefSysParam:'',
                    pdsBRefSysParam: '',
                    packSpecification:'',
                    packsBRefSysParam:'',
                    palletCapacity:'',
                    warningNum:'',
                    cdesc:'',
                    imgUrl:''
                };
                this.dialogStatus = 'create';
                this.editVisible = true;
                this.$nextTick(() => {
                    this.$refs['form'].clearValidate()
                })
            },
            addData(){
                this.$refs['form'].validate((valid) => {
                    if(valid){
                        this.repeatVoid()
                        tableAdd(this.form).then(response => {
                            if(response.data.code==0){
                                this.getTableData();
                                this.editVisible = false;
                                this.$notify({
                                    title: '成功',
                                    message: '创建成功',
                                    type: 'success',
                                    duration: 2000
                                })
                            }
                        })
                    }
                })
            },
            //表单编辑
            handleUpdate(index, row) {
                this.formTitle='编辑';
                this.isSubmit=false;
                this.idx = index;
                var detailguid={guid:row.guid}
                tableDetail(detailguid).then(response => {
                    if(response.data.code==0){
                        this.historyName=response.data.data.cname;
                        this.form={
                            guid:detailguid.guid,
                            refSysParam: response.data.data.refSysParam,
                            cname: response.data.data.cname,
                            ccode: response.data.data.ccode,
                            effectiveDate:  response.data.data.effectiveDate,
                            edUnit:  response.data.data.edUnit,
                            warningDate: response.data.data.warningDate,
                            wdUnit: response.data.data.wdUnit,
                            pdSpecification: response.data.data.pdSpecification,
                            pdsSRefSysParam: response.data.data.pdsSRefSysParam,
                            pdsBRefSysParam: response.data.data.pdsBRefSysParam,
                            packSpecification: response.data.data.packSpecification,
                            packsBRefSysParam: response.data.data.packsBRefSysParam,
                            palletCapacity: response.data.data.palletCapacity,
                            warningNum: response.data.data.warningNum,
                            cdesc: response.data.data.cdesc
                        }
                    }
                })
                this.imgUrl=this.globe.hostUrl+'/'+this.tableData[index].imgUrl
                this.dialogStatus = 'update';
                this.editVisible = true;
                this.$nextTick(() => {
                    this.$refs['form'].clearValidate()
                })
            },
            // 保存编辑
            updateData() {
                tableUpdate(this.form).then(response => {
                    this.repeatVoid()
                    if(response.data.code==0){
                        this.getTableData();
                        this.editVisible = false;
                        this.$message.success(`修改第 ${this.idx+1} 行成功`);
                    }
                })
            },
            //表单删除
            handleDelete(index, row) {
                this.idx = index;
                this.delVisible = true;
                const item = this.tableData[index];
                this.delete = {guid:item.guid,}
            },
            // 确定删除
            deleteRow(){
                tableDelete(this.delete).then(response => {
                    if(response.data.code==0){
                        this.getTableData();
                        this.$message.success('删除成功');
                        this.delVisible = false;
                    }
                })
            },
            //状态修改
            statusChange(index, row){
                const item = this.tableData[index];
                this.status = {
                    guid:item.guid,
                    cstatus:item.cstatus
                };
                statusList(this.status).then(response => {
                    if(response.data.code==0){
                        this.getTableData();
                        this.$message.success('修改成功');
                    }
                })
            },
            //商品类别下拉数据
            getTypeList(){
                typeList().then(response =>{
                    if(response.data.code==0){
                        this.typeList=response.data.data;
                        this.userFormList=response.data.data;
                    }
                })
            },
            //图片上传
            setImage(e){
                const file = e.target.files[0];
                if (!file.type.includes('image/')) {
                    return;
                }
                const formData = new FormData();
                formData.append('file',file);
                request({
                    url:'/upload/file',
                    method: 'post',
                    data: formData
                }).then(response => {
                    if(response.data.code==0){
                        this.imgUrl = this.globe.hostUrl+'/'+response.data.data.imgUrl;
                        this.form.imgUrl = response.data.data.imgUrl;
                    }
                })
            },
            //单位读取
            getUnitList(){
                unitList(this.unitParam).then(response =>{
                    if(response.data.code==0){
                        this.unitList=response.data.data;
                    }
                })
            },
            getDateUnit(value){
                if(value=='day'){
                    return '天'
                }else if(value=='month'){
                    return '月'
                }else if(value=='year'){
                    return '年'
                }
            },
            isExist(rule, value, callback){
                this.existParam.cname=this.form.cname
                if(this.historyName==value){
                    callback();
                }
                isNameRepeat(this.existParam).then(response =>{
                    if(response.data.code==0){
                        callback();
                    }else if(response.data.code==100){
                        callback(new Error('商品名称已存在，请重新输入'))
                    }else{
                        callback();
                    }
                })
            },
            repeatVoid(){
                this.isSubmit=true;
                setTimeout(function () {
                    this.isSubmit=false;
                },4000)
            },
        }
    }
</script>

<style scoped>
    .content-title{
        font-weight: 400;
        line-height: 50px;
        margin: 10px 0;
        font-size: 22px;
        color: #1f2f3d;
    }
    .pre-img{
        width: 100px;
        height: 100px;
        background: #f8f8f8;
        border: 1px solid #eee;
        border-radius: 5px;
    }
    .crop-demo{
        display: flex;
        align-items: flex-end;
    }
    .crop-demo-btn{
        position: relative;
        height: 32px;
        line-height: 32px;
        padding: 0 15px;
        margin-left: 30px;
        background-color: #409eff;
        color: #fff;
        font-size: 14px;
        border-radius: 4px;
        box-sizing: border-box;
    }
    .crop-input{
        position: absolute;
        width: 100px;
        height: 40px;
        left: 0;
        top: 0;
        opacity: 0;
        cursor: pointer;
    }
</style>
